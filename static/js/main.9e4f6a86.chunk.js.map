{"version":3,"sources":["components/Header/styles.js","components/Header/index.js","components/PostList/Post/styles.js","redux/actions/index.js","constant.js","components/PostList/Post/index.js","redux/selectors/index.js","components/PostList/styles.js","components/PostList/index.js","pages/styles.js","components/CreatePostModal/styles.js","components/CreatePostModal/index.js","pages/HomePage.js","App.js","redux/reducers/index.js","redux/reducers/posts.js","redux/reducers/modal.js","api/index.js","redux/sagas/index.js","index.js"],"names":["makeStyles","theme","container","backgroundColor","palette","primary","main","color","marginBottom","fontWeight","padding","Header","classes","useStyles","Typography","variant","align","className","media","height","getType","reduxAction","type","getPosts","createActions","getPostsRequest","undefined","getPostsSuccess","payLoad","getPostsFailure","err","createPost","createPostRequest","payload","createPostSuccess","createPostFailure","updatePost","updatePostRequest","updatePostSuccess","updatePostFailure","showModal","createAction","hideModal","INIT_STATE","posts","isLoading","data","modal","isShow","Post","post","dispatch","useDispatch","onLikeBtnClick","useCallback","likeCount","Card","CardHeader","avatar","Avatar","title","author","subheader","moment","updatedAt","format","action","IconButton","CardMedia","image","attachment","CardContent","component","content","CardActions","onClick","postsState$","state","modalState$","loadding","position","top","left","transform","width","PostList","useStyle","useSelector","console","log","useEffect","actions","Grid","spacing","alignItems","length","map","item","xs","sm","_id","fab","bottom","right","paper","background","boxShadow","shadows","form","display","flexDirection","header","margin","textarea","footer","marginTop","CreatePostModal","useState","setData","onClose","onSubmit","body","id","noValidate","autoComplete","TextField","required","label","value","onChange","e","target","TextareaAutosize","rowsMin","rowsMax","placeholder","accept","multiple","onDone","base64","Button","fullWidth","Modal","open","HomePage","openCreatePostModal","Container","maxWidth","Fab","App","combineReducers","URL","fetchPosts","axios","get","fetchPostsSaga","createPostSaga","updatePostSaga","mySaga","call","api","put","updatedPost","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e4f6a86.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles((theme) => ({\n  container: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    marginBottom: 20,\n    fontWeight: \"lighter\",\n    padding: \"5px 0\",\n  },\n}));\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <Typography variant=\"h4\" align=\"center\" className={classes.container}>\n      Blog\n    </Typography>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(() => ({\n  media: {\n    height: \"150px\",\n  },\n}));\n","import { createActions, createAction } from \"redux-actions\";\n\nexport const getType = (reduxAction) => {\n  return reduxAction().type;\n};\n\nexport const getPosts = createActions({\n  getPostsRequest: undefined,\n  getPostsSuccess: (payLoad) => payLoad,\n  getPostsFailure: (err) => err,\n});\n\nexport const createPost = createActions({\n  createPostRequest: (payload) => payload,\n  createPostSuccess: (payLoad) => payLoad,\n  createPostFailure: (err) => err,\n});\n\nexport const updatePost = createActions({\n  updatePostRequest: (payload) => payload,\n  updatePostSuccess: (payLoad) => payLoad,\n  updatePostFailure: (err) => err,\n});\n\nexport const showModal = createAction(\"SHOW_CREATE_POST_MODAL\");\nexport const hideModal = createAction(\"HIDE_CREATE_POST_MODAL\");\n\nexport const getToken = (token: string) => {\n  return {\n    type: \"GET_TOKEN\",\n    payload: token,\n  };\n};\n","export const INIT_STATE = {\n  posts: {\n    isLoading: false,\n    data: [],\n  },\n  modal: {\n    isShow: false,\n  },\n};\n","import React, { useCallback } from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport moment from \"moment\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePost } from \"../../../redux/actions\";\nimport postsReducers from \"../../../redux/reducers/posts\";\n\nexport default function Post({ post }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const onLikeBtnClick = useCallback(() => {\n    dispatch(\n      updatePost.updatePostRequest({ ...post, likeCount: post.likeCount + 1 })\n    );\n  }, [post, dispatch]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar>A</Avatar>}\n        title={post.author}\n        subheader={moment(post.updatedAt).format(\"HH:MM MMM DD, YYYY\")}\n        action={\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        }\n      />\n      <CardMedia\n        image={post.attachment}\n        title=\"Title\"\n        className={classes.media}\n      />\n      <CardContent>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          {post.title}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          component=\"p\"\n          color=\"textSecondary\"\n          color=\"textPrimary\"\n        >\n          {post.content}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <IconButton onClick={onLikeBtnClick}>\n          <FavoriteIcon />\n          <Typography component=\"span\" color=\"textSecondary\">\n            {post.likeCount}\n          </Typography>\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","export const postsState$ = (state) => state.posts.data;\n\nexport const modalState$ = (state) => state.modal;\n","import { makeStyles } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\n\nexport default makeStyles(() => ({\n  loadding: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \" 100px\",\n    height: \" 100px\",\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Post from \"./Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport { postsState$ } from \"../../redux/selectors\";\nimport ReactLoading from \"react-loading\";\nimport { mergeClasses } from \"@material-ui/styles\";\nimport useStyle from \"./styles\";\n\nexport default function PostList() {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const posts = useSelector(postsState$);\n  console.log(\"[postlist - posts]\", posts);\n\n  useEffect(() => {\n    dispatch(actions.getPosts.getPostsRequest());\n  }, [dispatch]);\n\n  return (\n    <Grid container spacing={2} alignItems=\"stretch\">\n      {posts.length !== 0 ? (\n        posts.map((post) => (\n          <Grid item xs={12} sm={6}>\n            <Post post={post} key={post._id} />\n          </Grid>\n        ))\n      ) : (\n        <ReactLoading\n          type=\"spin\"\n          color=\"#4050B5\"\n          height={\"50px\"}\n          width={\"50px\"}\n          className={classes.loadding}\n        />\n      )}\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles((theme) => ({\n  paper: {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {\n    margin: \"0 0 10px 0\",\n  },\n  title: {\n    marginBottom: \"10px\",\n  },\n  textarea: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  },\n  footer: {\n    marginTop: \"10px\",\n  },\n}));\n","import React, { useCallback, useState } from \"react\";\nimport { Modal, TextareaAutosize, TextField, Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalState$ } from \"../../redux/selectors\";\nimport useStyles from \"./styles\";\nimport FileBase64 from \"react-file-base64\";\nimport { createPost, hideModal } from \"../../redux/actions\";\n\nexport default function CreatePostModal() {\n  const [data, setData] = useState({\n    title: \"\",\n    content: \"\",\n    attachment: \"\",\n  });\n  const { isShow } = useSelector(modalState$);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onClose = useCallback(() => {\n    dispatch(hideModal());\n    setData({ title: \"\", content: \"\", attachment: \"\" });\n  }, [dispatch]);\n\n  const onSubmit = useCallback(() => {\n    console.log(data);\n    dispatch(createPost.createPostRequest(data));\n    dispatch(hideModal());\n  }, [data, dispatch]);\n\n  const body = (\n    <div className={classes.paper} id=\"simple-modal-title\">\n      <h2>Create New Post</h2>\n      <form noValidate autoComplete=\"off\" className={classes.form}>\n        <TextField\n          className={classes.title}\n          required\n          label=\"Title\"\n          value={data.title}\n          onChange={(e) => setData({ ...data, title: e.target.value })}\n        />\n        <TextareaAutosize\n          className={classes.textarea}\n          rowsMin={10}\n          rowsMax={15}\n          placeholder=\"Content...\"\n          value={data.content}\n          onChange={(e) => setData({ ...data, content: e.target.value })}\n        />\n        <FileBase64\n          accept=\"/image/*\"\n          multiple={false}\n          type=\"file\"\n          value={data.attachment}\n          onDone={({ base64 }) => setData({ ...data, attachment: base64 })}\n        />\n        <div className={classes.footer}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"span\"\n            fullWidth\n            onClick={onSubmit}\n          >\n            Create\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n  return (\n    <div>\n      {/* <Modal open={isShow}>{body}</Modal> */}\n      <Modal open={isShow} onClose={onClose}>\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import { React, useCallback } from \"react\";\nimport { Container, Fab } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PostList from \"../components/PostList\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport { showModal } from \"../redux/actions\";\nimport CreatePostModal from \"../components/CreatePostModal\";\n\nexport default function HomePage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const openCreatePostModal = useCallback(() => {\n    dispatch(showModal());\n  }, [dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Header></Header>\n      <PostList></PostList>\n      <CreatePostModal />\n\n      <Fab\n        color=\"primary\"\n        className={classes.fab}\n        onClick={openCreatePostModal}\n      >\n        <AddIcon />\n      </Fab>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport HomePage from \"./pages/HomePage\";\nimport * as actions from \"./redux/actions\";\n\nfunction App() {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport posts from \"./posts\";\nimport modal from \"./modal\";\n\nexport default combineReducers({\n  posts,\n  modal,\n});\n","import { INIT_STATE } from \"../../constant\";\nimport { createPost, getPosts, getType, updatePost } from \"../actions\";\n\nexport default function postsReducers(state = INIT_STATE.posts, action) {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest): // case 'getPostsRequest'\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case getType(getPosts.getPostsSuccess): // case 'getPostsRequest'\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n\n    case getType(getPosts.getPostsFailure): // case 'getPostsRequest'\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case getType(createPost.createPostSuccess):\n      return {\n        ...state,\n        data: [...state.data, action.payload],\n      };\n    case getType(updatePost.updatePostSuccess):\n      return {\n        ...state,\n        data: state.data.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { INIT_STATE } from \"../../constant\";\nimport { getType, hideModal, showModal } from \"../actions\";\n\nexport default function modalReducers(state = INIT_STATE.modal, action) {\n  switch (action.type) {\n    case getType(showModal):\n      return {\n        isShow: true,\n      };\n\n    case getType(hideModal):\n      return {\n        isShow: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\nconst URL = \"https://blog-app-nguy3nds.herokuapp.com\";\n\nexport const fetchPosts = () => axios.get(`${URL}/posts`);\nexport const createPost = (payload) => axios.post(`${URL}/posts`, payload);\nexport const updatePost = (payload) =>\n  axios.post(`${URL}/posts/update`, payload);\n","import { call, takeLatest, put } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport * as api from \"../../api\";\n\nfunction* fetchPostsSaga(action) {\n  try {\n    const posts = yield call(api.fetchPosts);\n    console.log(\"[post]\", posts);\n    yield put(actions.getPosts.getPostsSuccess(posts.data));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.getPosts.getPostsFailure(error));\n  }\n}\n\nfunction* createPostSaga(action) {\n  try {\n    const updatedPost = yield call(api.createPost, action.payload);\n    console.log(\"[createPostSaga-post]\", updatedPost);\n    yield put(actions.createPost.createPostSuccess(updatedPost.data));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.createPost.createPostFailure(error));\n  }\n}\n\nfunction* updatePostSaga(action) {\n  try {\n    const post = yield call(api.updatePost, action.payload);\n    console.log(\"[updatePostSaga-post]\", post);\n    yield put(actions.updatePost.updatePostSuccess(post.data));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.updatePost.updatePostFailure(error));\n  }\n}\n\nfunction* mySaga() {\n  yield takeLatest(actions.getPosts.getPostsRequest, fetchPostsSaga);\n  yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\n  yield takeLatest(actions.updatePost.updatePostRequest, updatePostSaga);\n}\n\nexport default mySaga;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./redux/reducers/\";\nimport mySaga from \"./redux/sagas\";\nimport { Provider } from \"react-redux\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}